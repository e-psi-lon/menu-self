#file: noinspection Annotator
name: Build

on:
  push:
    branches: [ "master" ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      type:
        description: alpha or beta
        default: alpha



jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GPLAY_KEYSTORE_PASSWORD: ${{ secrets.GPLAY_KEYSTORE_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: "src"

      - name: Determine channel
        id: channel
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            channel="dev"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ inputs.type }}" == "alpha" ]; then
              channel="alpha"
            elif [ "${{ inputs.type }}" == "beta" ]; then
              channel="beta"
            else
              channel="dev"
            fi
          else
            channel="stable"
          fi
          echo "Channel: $channel"
          echo "::set-output name=channel::$channel"
        shell: bash

      - name: Checkout builds-dev
        uses: actions/checkout@v3
        with:
          ref: "builds-dev"
          path: "builds-dev"

      - name: Checkout builds-alpha
        uses: actions/checkout@v3
        with:
          ref: "builds-alpha"
          path: "builds-alpha"

      - name: Checkout builds-beta
        uses: actions/checkout@v3
        with:
          ref: "builds-beta"
          path: "builds-beta"

      - name: Checkout builds-stable
        uses: actions/checkout@v3
        with:
          ref: "builds-stable"
          path: "builds-stable"

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle


      - name: Build with Gradle
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew build -Pchannel=${{ steps.channel.outputs.channel }}
          cp app/build/outputs/apk/release/app-release.apk ../builds-dev/app-release.apk
          cp app/build/outputs/apk/release/app-release.apk ../builds-alpha/app-release.apk
          cp app/build/outputs/apk/release/app-release.apk ../builds-beta/app-release.apk
          cp app/build/outputs/apk/release/app-release.apk ../builds-stable/app-release.apk


      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      - name: Push to dev branch
        if: steps.channel.outputs.channel == 'dev'
        run: |
          cd $GITHUB_WORKSPACE/builds-dev
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push

      - name: Push to alpha and dev branch
        if: steps.channel.outputs.channel == 'alpha'
        run: |
          cd $GITHUB_WORKSPACE/builds-alpha
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0 
          git push
          cd $GITHUB_WORKSPACE/builds-dev
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push

      - name: Push to beta, alpha and dev branch
        if: steps.channel.outputs.channel == 'beta'
        run: |
          cd $GITHUB_WORKSPACE/builds-beta
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
          cd $GITHUB_WORKSPACE/builds-alpha
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
          cd $GITHUB_WORKSPACE/builds-dev
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push  

      - name: Push to all branches
        if: steps.channel.outputs.channel == 'stable'
        run: |
          cd $GITHUB_WORKSPACE/builds-stable
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
          cd $GITHUB_WORKSPACE/builds-beta
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
          cd $GITHUB_WORKSPACE/builds-alpha
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
          cd $GITHUB_WORKSPACE/builds-dev
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0
          git push
